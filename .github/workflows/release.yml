name: release

on:
  workflow_dispatch:
    inputs:
      versionNumber:
        description: 'Release version number (v#.#.#)'
        type: string
        required: true

permissions:
  contents: read # Changelog commit operations use service account PAT

jobs:
  changelog-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.changelog-version.outputs.version }}
    steps:
      - id: changelog-version
        run: echo "version=$(echo "${{ inputs.versionNumber }}" | cut -c 2-)" >> "$GITHUB_OUTPUT"

  changelog:
    needs: changelog-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0
          # Avoid persisting GITHUB_TOKEN credentials as they take priority over our service account PAT for `git push` operations
          # More details: https://github.com/actions/checkout/blob/b4626ce19ce1106186ddf9bb20e706842f11a7c3/adrs/0153-checkout-v2.md#persist-credentials
          persist-credentials: false
      - name: Batch changes
        uses: miniscruff/changie-action@6dcc2533cac0495148ed4046c438487e4dceaa23 # v2.0.0
        with:
          version: latest
          args: batch ${{ needs.changelog-version.outputs.version }}
      - name: Merge changes
        uses: miniscruff/changie-action@6dcc2533cac0495148ed4046c438487e4dceaa23 # v2.0.0
        with:
          version: latest
          args: merge
      - name: Git push changelog
        run: |
          git config --global user.name "${{ vars.TF_THESUDO_CI_COMMIT_AUTHOR }}"
          git config --global user.email "${{ vars.TF_THESUDO_CI_COMMIT_EMAIL }}"
          git add .
          git commit -a -m "Update changelog"
          git push "https://${{ vars.TF_THESUDO_CI_COMMIT_AUTHOR }}:${{ secrets.TF_THESUDO_COMMIT_GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"

  release-tag:
    needs: changelog
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0
          # Default input is the SHA that initially triggered the workflow. As we created a new commit in the previous job,
          # to ensure we get the latest commit we use the ref for checkout: 'refs/heads/<branch_name>'
          ref: ${{ github.ref }}
          # Avoid persisting GITHUB_TOKEN credentials as they take priority over our service account PAT for `git push` operations
          # More details: https://github.com/actions/checkout/blob/b4626ce19ce1106186ddf9bb20e706842f11a7c3/adrs/0153-checkout-v2.md#persist-credentials
          persist-credentials: false

      - name: Git push release tag
        run: |
          git config --global user.name "${{ vars.TF_THESUDO_CI_COMMIT_AUTHOR }}"
          git config --global user.email "${{ vars.TF_THESUDO_CI_COMMIT_EMAIL }}"
          
          git tag "${{ inputs.versionNumber }}"
          git push "https://${{ vars.TF_THESUDO_CI_COMMIT_AUTHOR }}:${{ secrets.TF_THESUDO_COMMIT_GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" "${{ inputs.versionNumber }}"

  goreleaser:
    needs: [ changelog-version, changelog, release-tag ]
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed for goreleaser to create GitHub release
      issues: write # Needed for goreleaser to close associated milestone
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          ref: ${{ inputs.versionNumber }}
          fetch-depth: 0

      - uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version-file: 'go.mod'

      - name: Generate Release Notes
        run: |
          cd .changes
          sed -e "1{/# /d;}" -e "2{/^$/d;}" ${{ needs.changelog-version.outputs.version }}.md > /tmp/release-notes.txt

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@01dd5d3ca463c7f10f7f4f7b4f177225ac661ee4 # v6.1.0
        id: import_gpg
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@7ec5c2b0c6cdda6e8bbb49444bc797dd33d74dd8 # v5.0.0
        with:
          args: release --clean
        env:
          # GitHub sets the GITHUB_TOKEN secret automatically.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}